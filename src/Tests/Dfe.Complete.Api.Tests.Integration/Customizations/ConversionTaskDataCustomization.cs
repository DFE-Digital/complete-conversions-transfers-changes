using AutoFixture;
using Dfe.Complete.Domain.Entities;
using Dfe.Complete.Domain.ValueObjects;
using Dfe.Complete.Domain.Enums;
using GovUK.Dfe.CoreLibs.Testing.AutoFixture.Customizations;

namespace Dfe.Complete.Api.Tests.Integration.Customizations
{
    public class ConversionTaskDataCustomization : ICustomization
    {
        public void Customize(IFixture fixture)
        {
            fixture.Customize(new DateOnlyCustomization());

            fixture.Customize<ConversionTasksData>(composer => composer
                .With(x => x.Id, fixture.Create<TaskDataId>())
                .With(x => x.CreatedAt, fixture.Create<DateTime>())
                .With(x => x.UpdatedAt, fixture.Create<DateTime>())
                .With(x => x.AcademyDetailsName, fixture.Create<string>())
                .With(x => x.ArticlesOfAssociationCleared, false)
                .With(x => x.ArticlesOfAssociationNotApplicable, false)
                .With(x => x.ArticlesOfAssociationReceived, false)
                .With(x => x.ArticlesOfAssociationSaved, false)
                .With(x => x.ArticlesOfAssociationSent, false)
                .With(x => x.ArticlesOfAssociationSigned, false)
                .With(x => x.CheckAccuracyOfHigherNeedsConfirmNumber, false)
                .With(x => x.CheckAccuracyOfHigherNeedsConfirmPublishedNumber, false)
                .With(x => x.ChurchSupplementalAgreementCleared, false)
                .With(x => x.ChurchSupplementalAgreementNotApplicable, false)
                .With(x => x.ChurchSupplementalAgreementReceived, false)
                .With(x => x.ChurchSupplementalAgreementSaved, false)
                .With(x => x.ChurchSupplementalAgreementSent, false)
                .With(x => x.ChurchSupplementalAgreementSigned, false)
                .With(x => x.ChurchSupplementalAgreementSignedDiocese, false)
                .With(x => x.ChurchSupplementalAgreementSignedSecretaryState, false)
                .With(x => x.CommercialTransferAgreementAgreed, false)
                .With(x => x.CommercialTransferAgreementQuestionsChecked, false)
                .With(x => x.CommercialTransferAgreementQuestionsReceived, false)
                .With(x => x.CommercialTransferAgreementSaved, false)
                .With(x => x.CommercialTransferAgreementSigned, false)
                .With(x => x.CompleteNotificationOfChangeCheckDocument, false)
                .With(x => x.CompleteNotificationOfChangeNotApplicable, false)
                .With(x => x.CompleteNotificationOfChangeSendDocument, false)
                .With(x => x.CompleteNotificationOfChangeTellLocalAuthority, false)
                .With(x => x.ConfirmDateAcademyOpenedDateOpened, fixture.Create<DateOnly?>())
                .With(x => x.ConversionGrantCheckVendorAccount, false)
                .With(x => x.ConversionGrantNotApplicable, false)
                .With(x => x.ConversionGrantPaymentForm, false)
                .With(x => x.ConversionGrantSendInformation, false)
                .With(x => x.ConversionGrantSharePaymentDate, false)
                .With(x => x.DeedOfVariationCleared, false)
                .With(x => x.DeedOfVariationNotApplicable, false)
                .With(x => x.DeedOfVariationReceived, false)
                .With(x => x.DeedOfVariationSaved, false)
                .With(x => x.DeedOfVariationSent, false)
                .With(x => x.DeedOfVariationSigned, false)
                .With(x => x.DeedOfVariationSignedSecretaryState, false)
                .With(x => x.DirectionToTransferCleared, false)
                .With(x => x.DirectionToTransferNotApplicable, false)
                .With(x => x.DirectionToTransferReceived, false)
                .With(x => x.DirectionToTransferSaved, false)
                .With(x => x.DirectionToTransferSigned, false)
                .With(x => x.HandoverMeeting, false)
                .With(x => x.HandoverNotes, false)
                .With(x => x.HandoverNotApplicable, false)
                .With(x => x.HandoverReview, false)
                .With(x => x.LandQuestionnaireCleared, false)
                .With(x => x.LandQuestionnaireReceived, false)
                .With(x => x.LandQuestionnaireSaved, false)
                .With(x => x.LandQuestionnaireSigned, false)
                .With(x => x.LandRegistryCleared, false)
                .With(x => x.LandRegistryReceived, false)
                .With(x => x.LandRegistrySaved, false)
                .With(x => x.MasterFundingAgreementCleared, false)
                .With(x => x.MasterFundingAgreementNotApplicable, false)
                .With(x => x.MasterFundingAgreementReceived, false)
                .With(x => x.MasterFundingAgreementSaved, false)
                .With(x => x.MasterFundingAgreementSent, false)
                .With(x => x.MasterFundingAgreementSigned, false)
                .With(x => x.MasterFundingAgreementSignedSecretaryState, false)
                .With(x => x.OneHundredAndTwentyFiveYearLeaseEmail, false)
                .With(x => x.OneHundredAndTwentyFiveYearLeaseNotApplicable, false)
                .With(x => x.OneHundredAndTwentyFiveYearLeaseReceive, false)
                .With(x => x.OneHundredAndTwentyFiveYearLeaseSaveLease, false)
                .With(x => x.ProposedCapacityOfTheAcademyNotApplicable, false)
                .With(x => x.ProposedCapacityOfTheAcademyReceptionToSixYears, fixture.Create<string>())
                .With(x => x.ProposedCapacityOfTheAcademySevenToElevenYears, fixture.Create<string>())
                .With(x => x.ProposedCapacityOfTheAcademyTwelveOrAboveYears, fixture.Create<string>())
                .With(x => x.ReceiveGrantPaymentCertificateCheckCertificate, false)
                .With(x => x.ReceiveGrantPaymentCertificateDateReceived, fixture.Create<DateOnly?>())
                .With(x => x.ReceiveGrantPaymentCertificateNotApplicable, false)
                .With(x => x.ReceiveGrantPaymentCertificateSaveCertificate, false)
                .With(x => x.RedactAndSendRedact, false)
                .With(x => x.RedactAndSendSaveRedaction, false)
                .With(x => x.RedactAndSendSendRedaction, false)
                .With(x => x.RedactAndSendSendSolicitors, false)
                .With(x => x.RiskProtectionArrangementOption, fixture.Create<RiskProtectionArrangementOption>())
                .With(x => x.RiskProtectionArrangementReason, fixture.Create<string>())
                .With(x => x.SchoolCompletedEmailed, false)
                .With(x => x.SchoolCompletedSaved, false)
                .With(x => x.ShareInformationEmail, false)
                .With(x => x.SponsoredSupportGrantInformTrust, false)
                .With(x => x.SponsoredSupportGrantNotApplicable, false)
                .With(x => x.SponsoredSupportGrantPaymentAmount, false)
                .With(x => x.SponsoredSupportGrantPaymentForm, false)
                .With(x => x.SponsoredSupportGrantSendInformation, false)
                .With(x => x.SponsoredSupportGrantType, fixture.Create<string>())
                .With(x => x.StakeholderKickOffCheckProvisionalConversionDate, false)
                .With(x => x.StakeholderKickOffIntroductoryEmails, false)
                .With(x => x.StakeholderKickOffLocalAuthorityProforma, false)
                .With(x => x.StakeholderKickOffMeeting, false)
                .With(x => x.StakeholderKickOffSetupMeeting, false)
                .With(x => x.SubleasesCleared, false)
                .With(x => x.SubleasesEmailSigned, false)
                .With(x => x.SubleasesNotApplicable, false)
                .With(x => x.SubleasesReceiveSigned, false)
                .With(x => x.SubleasesReceived, false)
                .With(x => x.SubleasesSaveSigned, false)
                .With(x => x.SubleasesSaved, false)
                .With(x => x.SubleasesSigned, false)
                .With(x => x.SupplementalFundingAgreementCleared, false)
                .With(x => x.SupplementalFundingAgreementReceived, false)
                .With(x => x.SupplementalFundingAgreementSaved, false)
                .With(x => x.SupplementalFundingAgreementSent, false)
                .With(x => x.SupplementalFundingAgreementSigned, false)
                .With(x => x.SupplementalFundingAgreementSignedSecretaryState, false)
                .With(x => x.TenancyAtWillEmailSigned, false)
                .With(x => x.TenancyAtWillNotApplicable, false)
                .With(x => x.TenancyAtWillReceiveSigned, false)
                .With(x => x.TenancyAtWillSaveSigned, false)
                .With(x => x.TrustModificationOrderCleared, false)
                .With(x => x.TrustModificationOrderNotApplicable, false)
                .With(x => x.TrustModificationOrderReceived, false)
                .With(x => x.TrustModificationOrderSaved, false)
                .With(x => x.TrustModificationOrderSentLegal, false)
                .With(x => x.UpdateEsfaUpdate, false)
            );
        }
    }
}

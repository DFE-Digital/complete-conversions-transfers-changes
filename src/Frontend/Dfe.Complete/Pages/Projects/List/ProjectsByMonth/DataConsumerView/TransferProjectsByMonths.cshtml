@page "/projects/all/by-month/transfers/from/{fromMonth}/{fromYear}/to/{toMonth}/{toYear}"
@using Dfe.Complete.Domain.Enums
@using Dfe.Complete.Pages.Projects.List
@using Dfe.Complete.Pages.Projects.List.ProjectsByMonth
@using MediatR
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Dfe.Complete.Pages.Projects.List.ProjectsByMonth.TransferProjectsByMonths
@inject ISender Sender
@{
    Layout = "List/ProjectsByMonth/DataConsumerView/_ProjectsByMonthsLayout";
    ViewData["Title"] = "Academies opening or transferring";
    
    var months = ProjectsByMonthModel.GetMonths();
    
    var ariaCurrentValue = "page";
    string? IsCurrentNav(string tabName) => Model.CurrentSubNavigationItem == tabName ? ariaCurrentValue : null;

    var user = await User.GetUser(Sender);
}
@section PageHeading
{
<span class="govuk-caption-l">Academies opening or transferring</span>
<h1 class="govuk-heading-l">
    @Model.DateRangeDisplay
</h1>
<p>Schools that will become academies, and academies that will move to a different trust.</p>

@await Html.PartialAsync("_DateRangeForm", Model)

}

<div class="govuk-grid-column-full">

    @await Html.PartialAsync("_SubNavigation", Model)

    @{
        if (Model.Projects.Any())
        {
            <partial name="Projects/List/ProjectsByMonth/_ProjectsByMonthTable" model="@Model.Projects"/>
        }
        else
        {
            <div class="govuk-inset-text">
                There are no projects due to transfer between @Model.FromDate and @Model.ToDate
            </div>
        }
    }
</div>
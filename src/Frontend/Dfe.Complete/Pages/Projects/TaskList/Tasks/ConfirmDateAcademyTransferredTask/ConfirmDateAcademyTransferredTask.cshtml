@page "/projects/{projectId}/tasks/confirm_date_academy_transferred"

@model Dfe.Complete.Pages.Projects.TaskList.Tasks.ConfirmDateAcademyTransferredTask.ConfirmDateAcademyTransferredTaskModel
@inject Dfe.Complete.Services.Interfaces.IErrorService ErrorService
@{
    Layout = "_ProjectTaskLayout";
    ViewData["Title"] = "Confirm the date the academy transferred";
    var dateAcademyTransferred = "date-academy-transferred";

}
@section TaskHeaderHintSection {
    <div class="govuk-hint">
        <p> Funding teams need to know when the academy transferred so they can make payments and changes related to any Risk Protection Agreement.</p>
    </div>
}
<br />

@section TaskSection {

    <form method="post" class="new_transfer_task_confirm_date_academy_transferred_task_form" data-cy="confirm-date-academy-transferred-form">
        <input type="hidden" asp-for="TasksDataId" data-cy="tasks-data-id-input" />
        <govuk-date-input data-cy="date-academy-transferred-input" id="@dateAcademyTransferred" name-prefix="@dateAcademyTransferred" asp-for="@Model.DateAcademyTransferred" class="govuk-form-group">
            <govuk-date-input-fieldset>
                <govuk-date-input-fieldset-legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                    Enter the date the academy transferred
                </govuk-date-input-fieldset-legend>
                <govuk-date-input-hint>
                    <p>For example, 1 3 2023</p>
                </govuk-date-input-hint>
                @if (ErrorService.HasErrorForKey(@dateAcademyTransferred))
                {
                    <govuk-date-input-error-message>@ErrorService.GetErrorMessage(@dateAcademyTransferred)</govuk-date-input-error-message>
                }
            </govuk-date-input-fieldset>
        </govuk-date-input>
        @await Html.PartialAsync("_TaskSaveAndReturn", new TaskSaveAndReturnModel(Model.Project, Model.CurrentUserTeam))
    </form>
}

@using Dfe.Complete.Constants;
@using Dfe.Complete.Domain.Constants
@using Dfe.Complete.Utils;
@using Dfe.Complete.Domain.Enums
@using Dfe.Complete.Domain.Extensions
@using Dfe.Complete.Pages.Projects.DateHistory
@using GovUk.Frontend.AspNetCore.TagHelpers
@using Dfe.Complete.Pages.Projects.ProjectView
@using Dfe.Complete.TagHelpers

@model Dfe.Complete.Pages.Projects.ProjectView.ProjectLayoutModel
@{
  Layout = "Shared/_Layout";

  string? IsCurrentNav(string tabName) => Model.CurrentNavigationItem == tabName ? "page" : null;
}

<div class="govuk-grid-row">
  <div class="govuk-grid-column-two-thirds">
    <span class="govuk-caption-l">
      @(Model.Project.Type == ProjectType.Transfer ? "Academy" : "School") URN @Model.Project.Urn.Value
      <govuk-tag class="govuk-tag--purple">@Model.Project.Type.ToDisplayDescription()</govuk-tag>

      @if (Model.Project.FormAMat)
      {
        <govuk-tag class="govuk-tag--pink">Form a MAT</govuk-tag>
      }

      @* TODO: Add DAO Revoked *@

      @if (Model.Project.GroupId is not null)
      {
        <govuk-tag class="govuk-tag--turquoise">In a group</govuk-tag>
      }

    </span>
    <h1 class="govuk-heading-xl">@Model.Establishment.Name</h1>
  </div>
</div>

@if (Model.Project.CompletedAt is not null)
{
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <govuk-notification-banner>
        <govuk-notification-banner-title>
          Important
        </govuk-notification-banner-title>
        <h3>Project completed</h3>
        <p>This project was completed on @Model.Project.CompletedAt.ToDateMonthYearString().</p>
        <p>Only Service Support team members can make changes to this project.</p>
      </govuk-notification-banner>
    </div>
  </div>
}
else if (User.GetUserId() != Model.Project.AssignedToId &&
!Model.CurrentUserTeam.TeamIsServiceSupport())
{
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <govuk-notification-banner>
        <govuk-notification-banner-title>
          Important
        </govuk-notification-banner-title>
        <h3>Not assigned to project</h3>
        <p>This project is not assigned to you and cannot be changed, you can add notes or contacts if required.</p>
      </govuk-notification-banner>
    </div>
  </div>
}

@* TODO Add DAO Revoked message *@

<div class="govuk-grid-row">
  <div class="govuk-grid-column-three-quarters">
    <dl class="govuk-summary-list dfe-summary-list--project-summary" id="project-summary">
      <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">@Model.Project.Type.ToDisplayDescription() date</dt>
        <dd class="govuk-summary-list__value">
          @Model.Project.SignificantDate.ToDateString()
          @if (Model.Project.SignificantDateProvisional is true)
          {
            <strong class="govuk-tag govuk-tag--grey">provisional</strong>
          }
        </dd>
      </div>
      @if (Model.Project.Type == ProjectType.Transfer)
      {
        <div class="govuk-summary-list__row">
          <dt class="govuk-summary-list__key">Outgoing trust</dt>
          <dd class="govuk-summary-list__value">@Model.OutgoingTrust?.Name?.ToTitleCase()</dd>
        </div>
      }
      <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">Incoming trust</dt>
        <dd class="govuk-summary-list__value">@(Model.IncomingTrust?.Name?.ToTitleCase() ??
                    Model.Project.NewTrustName?.ToTitleCase())</dd>
      </div>
      <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">LA and region</dt>
        <dd class="govuk-summary-list__value">@Model.Establishment.LocalAuthorityName?.ToTitleCase(),
          @Model.Establishment.Gor?.Name?.ToTitleCase()</dd>
      </div>
      <div class="govuk-summary-list__row">
        <dt class="govuk-summary-list__key">SharePoint link@(Model.Project.Type == ProjectType.Conversion ? "s" : "")
        </dt>
        @if (Model.Project.Type == ProjectType.Transfer)
        {
          <dd class="govuk-summary-list__value">
            <a target="_blank" class="govuk-link" href="@Model.Project.EstablishmentSharepointLink">Academy folder (opens
              in new tab)</a>
          </dd>
        }
        @if (Model.Project.Type == ProjectType.Conversion)
        {
          <dd class="govuk-summary-list__value">
            <a target="_blank" class="govuk-link" href="@Model.Project.EstablishmentSharepointLink">School folder (opens
              in new tab)</a> &nbsp;|&nbsp;
            <a target="_blank" class="govuk-link" href="@Model.Project.IncomingTrustSharepointLink">Trust folder (opens in
              new tab)</a>
          </dd>
        }
      </div>
    </dl>

  </div>
</div>

<div class="govuk-button-group">
  @{
    if (SigDateHelper.CanEditSignificantDate(Model.Project, User, Model.CurrentUserTeam))
    {
      <a data-module="govuk-button" draggable="false" role="button" class="govuk-button govuk-button--secondary" href="@String.Format(RouteConstants.ChangeProjectDateHistory, Model.Project.Id.Value)">Change @(Model.Project.Type == ProjectType.Conversion ? "conversion" : "transfer") date</a>
    }
  }
  <a data-module="govuk-button" draggable="false" role="button" asp-policy="@UserPolicyConstants.CanViewServiceSupport" class="govuk-button govuk-button--warning" href="#">Delete project</a>
</div>


<div class="govuk-grid-row">
  <div class="govuk-grid-column-full">
    <nav class="moj-sub-navigation" aria-label="Project sub-navigation">
      <ul class="moj-sub-navigation__list">

        <li class="moj-sub-navigation__item">
          <a class="moj-sub-navigation__link" href="@String.Format(RouteConstants.ProjectTaskList, Model.Project.Id.Value)"
            aria-current="@IsCurrentNav(ProjectLayoutModel.TaskListNavigation)">Task list</a>
        </li>
        <li class="moj-sub-navigation__item">
          <a class="moj-sub-navigation__link" href="@String.Format(RouteConstants.ProjectAbout, Model.Project.Id.Value)"
            aria-current="@IsCurrentNav(ProjectLayoutModel.AboutTheProjectNavigation)">About the project</a>
        </li>
        <li class="moj-sub-navigation__item">
          <a class="moj-sub-navigation__link" href="@String.Format(RouteConstants.ProjectViewNotes, Model.Project.Id.Value)"
            aria-current="@IsCurrentNav(ProjectLayoutModel.NotesNavigation)">Notes</a>
        </li>
        <li class="moj-sub-navigation__item">
          <a class="moj-sub-navigation__link" href="@String.Format(RouteConstants.ProjectExternalContacts, Model.Project.Id.Value)"
            aria-current="@IsCurrentNav(ProjectLayoutModel.ExternalContactsNavigation)">External contacts</a>
        </li>
        <li class="moj-sub-navigation__item">
          <a class="moj-sub-navigation__link" href="@String.Format(RouteConstants.ProjectInternalContacts, Model.Project.Id.Value)"
            aria-current="@IsCurrentNav(ProjectLayoutModel.InternalContactsNavigation)">Internal contacts</a>
        </li>
        <li class="moj-sub-navigation__item">
          <a class="moj-sub-navigation__link" href="@String.Format(RouteConstants.ProjectDateHistory, Model.Project.Id.Value)"
            aria-current="@IsCurrentNav(ProjectLayoutModel.ConversionDateHistoryNavigation)">@Model.Project.Type.ToDisplayDescription()
            date history</a>
        </li>
      </ul>
    </nav>
  </div>
</div>

@RenderBody()

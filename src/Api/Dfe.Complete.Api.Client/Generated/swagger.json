{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Api",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/CsvExport": {
      "post": {
        "tags": [
          "CsvExport"
        ],
        "operationId": "CsvExport_GetConversionCsvByMonth",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "File",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/v1/CsvExport/Contents": {
      "post": {
        "tags": [
          "CsvExport"
        ],
        "operationId": "CsvExport_GetConversionCsvByMonthContents",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "File contents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/ProjectGroup": {
      "get": {
        "tags": [
          "ProjectGroup"
        ],
        "summary": "Gets the Project group by Id.",
        "operationId": "ProjectGroup_GetProjectGroupById",
        "parameters": [
          {
            "name": "Id.Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Project Group returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                }
              }
            }
          },
          "404": {
            "description": "Project Group not found for the given Id."
          }
        }
      }
    },
    "/v1/Projects/Create/Conversion": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Creates a new conversion project",
        "operationId": "Projects_CreateConversionProject",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConversionProjectCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Project created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectId"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/Create/Transfer": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Creates a new Transfer project",
        "operationId": "Projects_CreateTransferProject",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferProjectCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Project created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectId"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/Create/MatConversion": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Creates a new Form a Mat Conversion project",
        "operationId": "Projects_CreateMatConversionProject",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMatConversionProjectCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Project created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectId"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/Create/MatTransfer": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Creates a new Form a Mat Transfer project",
        "operationId": "Projects_CreateMatTransferProject",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMatTransferProjectCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Project created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectId"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets a Project",
        "operationId": "Projects_GetProject",
        "parameters": [
          {
            "name": "Urn.Value",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Removes project based on URN for test purposes.",
        "operationId": "Projects_RemoveProject",
        "requestBody": {
          "x-name": "urn",
          "description": "Urn to remove.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Urn"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Project Group returned successfully."
          }
        }
      }
    },
    "/v1/Projects/List/All": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of Projects",
        "operationId": "Projects_ListAllProjects",
        "parameters": [
          {
            "name": "ProjectStatus",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectState"
                }
              ]
            },
            "x-position": 1
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectType"
                }
              ]
            },
            "x-position": 2
          },
          {
            "name": "AssignedToState",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssignedToState"
                }
              ]
            },
            "x-position": 3
          },
          {
            "name": "OrderBy.Field",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderProjectByField"
            },
            "x-position": 4
          },
          {
            "name": "OrderBy.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByDirection"
            },
            "x-position": 5
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 7
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllProjectsResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/List/Trust": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of Projects related to a specific trust",
        "operationId": "Projects_ListAllProjectsInTrust",
        "parameters": [
          {
            "name": "Identifier",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "IsFormAMat",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 2
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllProjectsResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/List/Mat": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of all MATs",
        "operationId": "Projects_ListAllMaTs",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ProjectState"
            },
            "x-position": 1
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "List of all MATs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListMatResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/Count/All": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns the number of Projects",
        "operationId": "Projects_CountAllProjects",
        "parameters": [
          {
            "name": "ProjectStatus",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectState"
                }
              ]
            },
            "x-position": 1
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectType"
                }
              ]
            },
            "x-position": 2
          },
          {
            "name": "AssignedToState",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssignedToState"
                }
              ]
            },
            "x-position": 3
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/List/All/LocalAuthority": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of Projects for a local authority",
        "operationId": "Projects_ListAllProjectsForLocalAuthority",
        "parameters": [
          {
            "name": "LocalAuthorityCode",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectState"
                }
              ]
            },
            "x-position": 2
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectType"
                }
              ]
            },
            "x-position": 3
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllProjectsResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/List/All/Regions": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of Regions with project counts",
        "operationId": "Projects_ListAllProjectsByRegion",
        "parameters": [
          {
            "name": "ProjectStatus",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectState"
                }
              ]
            },
            "x-position": 1
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectType"
                }
              ]
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllProjectsByRegionsResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/List/All/Region": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of Projects for a region",
        "operationId": "Projects_ListAllProjectsForRegion",
        "parameters": [
          {
            "name": "Region",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Region"
            },
            "x-position": 1
          },
          {
            "name": "ProjectStatus",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectState"
                }
              ]
            },
            "x-position": 2
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectType"
                }
              ]
            },
            "x-position": 3
          },
          {
            "name": "AssignedToState",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssignedToState"
                }
              ]
            },
            "x-position": 4
          },
          {
            "name": "OrderBy.Field",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderProjectByField"
            },
            "x-position": 5
          },
          {
            "name": "OrderBy.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByDirection"
            },
            "x-position": 6
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 7
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllProjectsResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/List/All/Team": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of Projects for a team",
        "operationId": "Projects_ListAllProjectsForTeam",
        "parameters": [
          {
            "name": "Team",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ProjectTeam"
            },
            "x-position": 1
          },
          {
            "name": "ProjectStatus",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectState"
                }
              ]
            },
            "x-position": 2
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectType"
                }
              ]
            },
            "x-position": 3
          },
          {
            "name": "AssignedToState",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssignedToState"
                }
              ]
            },
            "x-position": 4
          },
          {
            "name": "OrderBy.Field",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderProjectByField"
            },
            "x-position": 5
          },
          {
            "name": "OrderBy.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByDirection"
            },
            "x-position": 6
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 7
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllProjectsResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/List/All/User": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of Projects for a user",
        "operationId": "Projects_ListAllProjectsForUser",
        "parameters": [
          {
            "name": "State",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectState"
                }
              ]
            },
            "x-position": 1
          },
          {
            "name": "UserAdId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "ProjectUserFilter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ProjectUserFilter"
            },
            "x-position": 3
          },
          {
            "name": "OrderProjectQueryBy.Field",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderProjectByField"
            },
            "x-position": 4
          },
          {
            "name": "OrderProjectQueryBy.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByDirection"
            },
            "x-position": 5
          },
          {
            "name": "UserEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 7
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllProjectsForUserQueryResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/v1/Projects/{groupReferenceNumber}/ProjectGroup": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets the UKPRN for a group reference number.",
        "operationId": "Projects_GetProjectGroupByGroupReferenceNumber_",
        "parameters": [
          {
            "name": "groupReferenceNumber",
            "in": "path",
            "required": true,
            "description": "The group reference number.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Project Group returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid group reference number."
          },
          "404": {
            "description": "Project Group not found for the given group reference number."
          }
        }
      }
    },
    "/v1/Projects/SearchProjects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Search list of project based on search criteria",
        "operationId": "Projects_SearchProjects",
        "parameters": [
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "ProjectStates",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProjectState"
              }
            },
            "x-position": 2
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllProjectsResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/List/All/TrustRef": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of Projects by trust reference number",
        "operationId": "Projects_ListAllProjectsByTrustRef",
        "parameters": [
          {
            "name": "ReferenceNumber",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllProjectsQueryModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/Notes": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of Notes for a Project",
        "operationId": "Projects_GetNotesByProjectId",
        "parameters": [
          {
            "name": "ProjectId.Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Notes for project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NoteDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create a new Note for a Project",
        "operationId": "Projects_CreateProjectNote",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNoteCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Note ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteId"
                }
              }
            }
          },
          "404": {
            "description": "Note not found"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update a Note for a Project",
        "operationId": "Projects_UpdateProjectNote",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNoteCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Note ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteId"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Note not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete a Note for a Project",
        "operationId": "Projects_DeleteProjectNote",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveNoteCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Project not found\nor\nNote not found"
          }
        }
      }
    },
    "/v1/Projects/Tasks/Notes": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of task notes for a Project",
        "operationId": "Projects_GetTaskNotesByProjectIdQuery",
        "parameters": [
          {
            "name": "ProjectId.Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "TaskIdentifier",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/NoteTaskIdentifier"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Notes for project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NoteDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/v1/Projects/List/All/Statistics": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of all projects statistics.",
        "operationId": "Projects_ListAllProjectsStatistics",
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllProjectsStatisticsModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/List/All/Converting": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of Projects converting to an academy",
        "operationId": "Projects_ListAllProjectsConverting",
        "parameters": [
          {
            "name": "WithAcademyUrn",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 1
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllProjectsConvertingQueryResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Projects/Project/AcademyUrn": {
      "patch": {
        "tags": [
          "Projects"
        ],
        "summary": "Updates the Academy URN for a specific project.",
        "operationId": "Projects_UpdateAcademyUrn",
        "requestBody": {
          "x-name": "request",
          "description": "The update command.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAcademyUrnCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Academy URN updated successfully."
          },
          "400": {
            "description": "Invalid request data."
          },
          "404": {
            "description": "Project not found."
          }
        }
      }
    },
    "/v1/Projects/Project/Handover/Assign": {
      "patch": {
        "tags": [
          "Projects"
        ],
        "summary": "Assign the handover project to a specific team or user.",
        "operationId": "Projects_AssignHandoverProject",
        "requestBody": {
          "x-name": "request",
          "description": "The update command.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHandoverProjectCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Invalid request data."
          },
          "404": {
            "description": "Project not found."
          }
        }
      }
    },
    "/v1/Projects/Project/Handover/Details": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns the details of a project for handover.",
        "operationId": "Projects_GetHandoverProjectDetails",
        "parameters": [
          {
            "name": "ProjectId.Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectWithEstablishmentQueryModel"
                }
              }
            }
          },
          "404": {
            "description": "project not found."
          }
        }
      }
    },
    "/v1/Projects/List/All/Handover": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns the details of a project for handover.",
        "operationId": "Projects_ListAllProjectsHandover",
        "parameters": [
          {
            "name": "ProjectStatus",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectState"
                }
              ]
            },
            "x-position": 1
          },
          {
            "name": "Urn.Value",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "OrderBy.Field",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderProjectByField"
            },
            "x-position": 3
          },
          {
            "name": "OrderBy.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByDirection"
            },
            "x-position": 4
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllProjectsResultModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "project not found."
          }
        }
      }
    },
    "/v1/Projects/List/Project/Id": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets a Project by Id",
        "operationId": "Projects_GetProjectById",
        "parameters": [
          {
            "name": "ProjectId.Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDto"
                }
              }
            }
          },
          "404": {
            "description": "project not found."
          }
        }
      }
    },
    "/v1/ServiceSupport/LocalAuthority": {
      "post": {
        "tags": [
          "ServiceSupport"
        ],
        "summary": "Creates a new local authority.",
        "operationId": "ServiceSupport_CreateLocalAuthority",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocalAuthorityCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Local authority created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      },
      "get": {
        "tags": [
          "ServiceSupport"
        ],
        "summary": "Get the local authority details",
        "operationId": "ServiceSupport_GetLocalAuthorityDetails",
        "parameters": [
          {
            "name": "LocalAuthorityId.Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Local authority details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalAuthorityDetailsModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      },
      "patch": {
        "tags": [
          "ServiceSupport"
        ],
        "summary": "Update the local authority details.",
        "operationId": "ServiceSupport_UpdateLocalAuthorityDetails",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocalAuthorityCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "local authoirty details updated successfully."
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceSupport"
        ],
        "summary": "Removes the local authority.",
        "operationId": "ServiceSupport_RemoveLocalAuthority",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteLocalAuthorityCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "local authority deleted successfully."
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/ServiceSupport/LocalAuthority/List/All": {
      "get": {
        "tags": [
          "ServiceSupport"
        ],
        "summary": "Returns a list of local authorities",
        "operationId": "ServiceSupport_ListAllLocalAuthorities",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "List of local authorities.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocalAuthorityQueryModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/TasksData/TaskData/Transfer": {
      "get": {
        "tags": [
          "TasksData"
        ],
        "summary": "Gets the transfer tasks data by Id.",
        "operationId": "TasksData_GetTransferTasksDataById",
        "parameters": [
          {
            "name": "Id.Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer tasks data returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferTaskDataDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer tasks data not found for the given Id."
          }
        }
      }
    },
    "/v1/TasksData/TaskData/Handover/DeliveryOfficer": {
      "patch": {
        "tags": [
          "TasksData"
        ],
        "summary": "Updates the handover with delivery officer for either conversion or transfer tasks data.",
        "operationId": "TasksData_UpdateHandoverWithDeliveryOfficerTaskDataByProjectId",
        "requestBody": {
          "x-name": "request",
          "description": "The update task data command.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHandoverWithDeliveryOfficerCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Successfully updated the conversion or trasnfer task data"
          },
          "404": {
            "description": "Transfer or Conversion task data not found for the given project Id."
          }
        }
      }
    },
    "/v1/TasksData/TaskData/ProjectId": {
      "get": {
        "tags": [
          "TasksData"
        ],
        "summary": "Gets the Task Data by Project Id for either conversion or transfer project.",
        "operationId": "TasksData_GetTaskDataByProjectId",
        "parameters": [
          {
            "name": "ProjectId.Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns conversion or transfer task data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDataModel"
                }
              }
            }
          },
          "404": {
            "description": "No task data found for the given Id."
          }
        }
      }
    },
    "/v1/Trust/List/All": {
      "get": {
        "tags": [
          "Trust"
        ],
        "summary": "Returns a list of trusts with projects",
        "operationId": "Trust_ListAllTrustsWithProjects",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Trusts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListTrustsWithProjectsResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a User with their assigned projects",
        "operationId": "Users_GetUserWithProjects",
        "parameters": [
          {
            "name": "UserId.Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectState"
                }
              ]
            },
            "x-position": 2
          },
          {
            "name": "OrderUserProjectsBy",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderUserProjectsByField"
                }
              ]
            },
            "x-position": 3
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithProjectsDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Users/List/All": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a list of Users with their assigned projects",
        "operationId": "Users_ListAllUsersWithProjects",
        "parameters": [
          {
            "name": "State",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectState"
                }
              ]
            },
            "x-position": 1
          },
          {
            "name": "Team",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProjectTeam"
                }
              ]
            },
            "x-position": 2
          },
          {
            "name": "RequireUserHasProjects",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllUsersWithProjectsResultModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProjectGroupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ProjectGroupId"
          },
          "groupIdentifier": {
            "type": "string",
            "nullable": true
          },
          "trustUkprn": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Ukprn"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProjectGroupId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "Ukprn": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProjectId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CreateConversionProjectCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "urn": {
            "$ref": "#/components/schemas/Urn"
          },
          "significantDate": {
            "type": "string",
            "format": "date"
          },
          "isSignificantDateProvisional": {
            "type": "boolean"
          },
          "incomingTrustUkprn": {
            "$ref": "#/components/schemas/Ukprn"
          },
          "isDueTo2Ri": {
            "type": "boolean"
          },
          "hasAcademyOrderBeenIssued": {
            "type": "boolean"
          },
          "advisoryBoardDate": {
            "type": "string",
            "format": "date"
          },
          "advisoryBoardConditions": {
            "type": "string"
          },
          "establishmentSharepointLink": {
            "type": "string"
          },
          "incomingTrustSharepointLink": {
            "type": "string"
          },
          "groupReferenceNumber": {
            "type": "string",
            "nullable": true
          },
          "handingOverToRegionalCaseworkService": {
            "type": "boolean"
          },
          "handoverComments": {
            "type": "string"
          },
          "userAdId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Urn": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateTransferProjectCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "urn": {
            "$ref": "#/components/schemas/Urn"
          },
          "outgoingTrustUkprn": {
            "$ref": "#/components/schemas/Ukprn"
          },
          "incomingTrustUkprn": {
            "$ref": "#/components/schemas/Ukprn"
          },
          "significantDate": {
            "type": "string",
            "format": "date"
          },
          "isSignificantDateProvisional": {
            "type": "boolean"
          },
          "isDueTo2Ri": {
            "type": "boolean"
          },
          "isDueToInedaquateOfstedRating": {
            "type": "boolean"
          },
          "isDueToIssues": {
            "type": "boolean"
          },
          "outGoingTrustWillClose": {
            "type": "boolean"
          },
          "handingOverToRegionalCaseworkService": {
            "type": "boolean"
          },
          "advisoryBoardDate": {
            "type": "string",
            "format": "date"
          },
          "advisoryBoardConditions": {
            "type": "string"
          },
          "establishmentSharepointLink": {
            "type": "string"
          },
          "incomingTrustSharepointLink": {
            "type": "string"
          },
          "outgoingTrustSharepointLink": {
            "type": "string"
          },
          "groupReferenceNumber": {
            "type": "string",
            "nullable": true
          },
          "handoverComments": {
            "type": "string"
          },
          "userAdId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateMatConversionProjectCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "urn": {
            "$ref": "#/components/schemas/Urn"
          },
          "newTrustName": {
            "type": "string"
          },
          "newTrustReferenceNumber": {
            "type": "string"
          },
          "significantDate": {
            "type": "string",
            "format": "date"
          },
          "isSignificantDateProvisional": {
            "type": "boolean"
          },
          "isDueTo2Ri": {
            "type": "boolean"
          },
          "hasAcademyOrderBeenIssued": {
            "type": "boolean"
          },
          "advisoryBoardDate": {
            "type": "string",
            "format": "date"
          },
          "advisoryBoardConditions": {
            "type": "string"
          },
          "establishmentSharepointLink": {
            "type": "string"
          },
          "incomingTrustSharepointLink": {
            "type": "string"
          },
          "handingOverToRegionalCaseworkService": {
            "type": "boolean"
          },
          "handoverComments": {
            "type": "string",
            "nullable": true
          },
          "userAdId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateMatTransferProjectCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "urn": {
            "$ref": "#/components/schemas/Urn"
          },
          "newTrustName": {
            "type": "string"
          },
          "newTrustReferenceNumber": {
            "type": "string"
          },
          "outgoingTrustUkprn": {
            "$ref": "#/components/schemas/Ukprn"
          },
          "significantDate": {
            "type": "string",
            "format": "date"
          },
          "isSignificantDateProvisional": {
            "type": "boolean"
          },
          "isDueTo2Ri": {
            "type": "boolean"
          },
          "isDueToInedaquateOfstedRating": {
            "type": "boolean"
          },
          "isDueToIssues": {
            "type": "boolean"
          },
          "handingOverToRegionalCaseworkService": {
            "type": "boolean"
          },
          "outGoingTrustWillClose": {
            "type": "boolean"
          },
          "advisoryBoardDate": {
            "type": "string",
            "format": "date"
          },
          "advisoryBoardConditions": {
            "type": "string"
          },
          "establishmentSharepointLink": {
            "type": "string"
          },
          "incomingTrustSharepointLink": {
            "type": "string"
          },
          "outgoingTrustSharepointLink": {
            "type": "string"
          },
          "handoverComments": {
            "type": "string"
          },
          "userAdId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProjectDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "urn": {
            "$ref": "#/components/schemas/Urn"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "incomingTrustUkprn": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Ukprn"
              }
            ]
          },
          "regionalDeliveryOfficerId": {
            "$ref": "#/components/schemas/UserId"
          },
          "caseworkerId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserId"
              }
            ]
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "advisoryBoardDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "advisoryBoardConditions": {
            "type": "string",
            "nullable": true
          },
          "establishmentSharepointLink": {
            "type": "string",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "incomingTrustSharepointLink": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectType"
              }
            ]
          },
          "assignedToId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserId"
              }
            ]
          },
          "significantDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "significantDateProvisional": {
            "type": "boolean",
            "nullable": true
          },
          "directiveAcademyOrder": {
            "type": "boolean",
            "nullable": true
          },
          "region": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Region"
              }
            ]
          },
          "academyUrn": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Urn"
              }
            ]
          },
          "tasksDataId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskDataId"
              }
            ]
          },
          "tasksDataType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskType"
              }
            ]
          },
          "outgoingTrustUkprn": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Ukprn"
              }
            ]
          },
          "team": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectTeam"
              }
            ]
          },
          "twoRequiresImprovement": {
            "type": "boolean",
            "nullable": true
          },
          "outgoingTrustSharepointLink": {
            "type": "string",
            "nullable": true
          },
          "allConditionsMet": {
            "type": "boolean",
            "nullable": true
          },
          "mainContactId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContactId"
              }
            ]
          },
          "establishmentMainContactId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContactId"
              }
            ]
          },
          "incomingTrustMainContactId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContactId"
              }
            ]
          },
          "outgoingTrustMainContactId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContactId"
              }
            ]
          },
          "newTrustReferenceNumber": {
            "type": "string",
            "nullable": true
          },
          "newTrustName": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/ProjectState"
          },
          "prepareId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "localAuthorityMainContactId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContactId"
              }
            ]
          },
          "groupId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectGroupId"
              }
            ]
          },
          "assignedTo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "caseworker": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "significantDateHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignificantDateHistoryDto"
            }
          },
          "regionalDeliveryOfficer": {
            "$ref": "#/components/schemas/User"
          },
          "formAMat": {
            "type": "boolean"
          },
          "establishmentName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ProjectType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Conversion",
          "Transfer"
        ],
        "enum": [
          "Conversion",
          "Transfer"
        ]
      },
      "Region": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "NorthEast",
          "NorthWest",
          "YorkshireAndTheHumber",
          "EastMidlands",
          "WestMidlands",
          "EastOfEngland",
          "London",
          "SouthEast",
          "SouthWest"
        ],
        "enum": [
          "NorthEast",
          "NorthWest",
          "YorkshireAndTheHumber",
          "EastMidlands",
          "WestMidlands",
          "EastOfEngland",
          "London",
          "SouthEast",
          "SouthWest"
        ]
      },
      "TaskDataId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "TaskType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Conversion",
          "Transfer"
        ],
        "enum": [
          "Conversion",
          "Transfer"
        ]
      },
      "ProjectTeam": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "RegionalCaseWorkerServices",
          "ServiceSupport",
          "London",
          "SouthEast",
          "YorkshireAndTheHumber",
          "NorthWest",
          "EastOfEngland",
          "WestMidlands",
          "NorthEast",
          "SouthWest",
          "EastMidlands",
          "BusinessSupport",
          "DataConsumers"
        ],
        "enum": [
          "RegionalCaseWorkerServices",
          "ServiceSupport",
          "London",
          "SouthEast",
          "YorkshireAndTheHumber",
          "NorthWest",
          "EastOfEngland",
          "WestMidlands",
          "NorthEast",
          "SouthWest",
          "EastMidlands",
          "BusinessSupport",
          "DataConsumers"
        ]
      },
      "ContactId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ProjectState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Active",
          "Completed",
          "Deleted",
          "DaoRevoked",
          "Inactive"
        ],
        "enum": [
          "Active",
          "Completed",
          "Deleted",
          "DaoRevoked",
          "Inactive"
        ]
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAggregateRoot"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/UserId"
              },
              "email": {
                "type": "string",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "manageTeam": {
                "type": "boolean",
                "nullable": true
              },
              "addNewProject": {
                "type": "boolean"
              },
              "firstName": {
                "type": "string",
                "nullable": true
              },
              "lastName": {
                "type": "string",
                "nullable": true
              },
              "activeDirectoryUserId": {
                "type": "string",
                "nullable": true
              },
              "assignToProject": {
                "type": "boolean",
                "nullable": true
              },
              "manageUserAccounts": {
                "type": "boolean",
                "nullable": true
              },
              "activeDirectoryUserGroupIds": {
                "type": "string",
                "nullable": true
              },
              "team": {
                "type": "string",
                "nullable": true
              },
              "deactivatedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "manageConversionUrns": {
                "type": "boolean",
                "nullable": true
              },
              "manageLocalAuthorities": {
                "type": "boolean",
                "nullable": true
              },
              "latestSession": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "fullName": {
                "type": "string"
              },
              "notes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Note"
                }
              },
              "projectAssignedTos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "projectCaseworkers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "projectRegionalDeliveryOfficers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        ]
      },
      "Note": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/NoteId"
          },
          "body": {
            "type": "string"
          },
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "userId": {
            "$ref": "#/components/schemas/UserId"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "taskIdentifier": {
            "type": "string",
            "nullable": true
          },
          "notableId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "notableType": {
            "type": "string",
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "NoteId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "Project": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAggregateRoot"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/ProjectId"
              },
              "urn": {
                "$ref": "#/components/schemas/Urn"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "incomingTrustUkprn": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Ukprn"
                  }
                ]
              },
              "regionalDeliveryOfficerId": {
                "$ref": "#/components/schemas/UserId"
              },
              "caseworkerId": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserId"
                  }
                ]
              },
              "assignedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "advisoryBoardDate": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "advisoryBoardConditions": {
                "type": "string",
                "nullable": true
              },
              "establishmentSharepointLink": {
                "type": "string",
                "nullable": true
              },
              "completedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "incomingTrustSharepointLink": {
                "type": "string",
                "nullable": true
              },
              "type": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProjectType"
                  }
                ]
              },
              "assignedToId": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserId"
                  }
                ]
              },
              "significantDate": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "significantDateProvisional": {
                "type": "boolean",
                "nullable": true
              },
              "directiveAcademyOrder": {
                "type": "boolean",
                "nullable": true
              },
              "region": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Region"
                  }
                ]
              },
              "academyUrn": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Urn"
                  }
                ]
              },
              "tasksDataId": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TaskDataId"
                  }
                ]
              },
              "tasksDataType": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TaskType"
                  }
                ]
              },
              "outgoingTrustUkprn": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Ukprn"
                  }
                ]
              },
              "team": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProjectTeam"
                  }
                ]
              },
              "twoRequiresImprovement": {
                "type": "boolean",
                "nullable": true
              },
              "outgoingTrustSharepointLink": {
                "type": "string",
                "nullable": true
              },
              "allConditionsMet": {
                "type": "boolean",
                "nullable": true
              },
              "mainContactId": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ContactId"
                  }
                ]
              },
              "establishmentMainContactId": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ContactId"
                  }
                ]
              },
              "incomingTrustMainContactId": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ContactId"
                  }
                ]
              },
              "outgoingTrustMainContactId": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ContactId"
                  }
                ]
              },
              "newTrustReferenceNumber": {
                "type": "string",
                "nullable": true
              },
              "newTrustName": {
                "type": "string",
                "nullable": true
              },
              "state": {
                "$ref": "#/components/schemas/ProjectState"
              },
              "prepareId": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "localAuthorityMainContactId": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ContactId"
                  }
                ]
              },
              "groupId": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProjectGroupId"
                  }
                ]
              },
              "localAuthorityId": {
                "$ref": "#/components/schemas/LocalAuthorityId"
              },
              "formAMat": {
                "type": "boolean"
              },
              "giasEstablishment": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GiasEstablishment"
                  }
                ]
              },
              "assignedTo": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              "caseworker": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              "contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "notes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Note"
                }
              },
              "regionalDeliveryOfficer": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              "localAuthority": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/LocalAuthority"
                  }
                ]
              },
              "significantDateHistories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SignificantDateHistory"
                }
              }
            }
          }
        ]
      },
      "LocalAuthorityId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "GiasEstablishment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAggregateRoot"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/GiasEstablishmentId"
              },
              "urn": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Urn"
                  }
                ]
              },
              "ukprn": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Ukprn"
                  }
                ]
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "establishmentNumber": {
                "type": "string",
                "nullable": true
              },
              "localAuthorityName": {
                "type": "string",
                "nullable": true
              },
              "localAuthorityCode": {
                "type": "string",
                "nullable": true
              },
              "regionName": {
                "type": "string",
                "nullable": true
              },
              "regionCode": {
                "type": "string",
                "nullable": true
              },
              "typeName": {
                "type": "string",
                "nullable": true
              },
              "typeCode": {
                "type": "string",
                "nullable": true
              },
              "ageRangeLower": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "ageRangeUpper": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "phaseName": {
                "type": "string",
                "nullable": true
              },
              "phaseCode": {
                "type": "string",
                "nullable": true
              },
              "dioceseName": {
                "type": "string",
                "nullable": true
              },
              "dioceseCode": {
                "type": "string",
                "nullable": true
              },
              "parliamentaryConstituencyName": {
                "type": "string",
                "nullable": true
              },
              "parliamentaryConstituencyCode": {
                "type": "string",
                "nullable": true
              },
              "addressStreet": {
                "type": "string",
                "nullable": true
              },
              "addressLocality": {
                "type": "string",
                "nullable": true
              },
              "addressAdditional": {
                "type": "string",
                "nullable": true
              },
              "addressTown": {
                "type": "string",
                "nullable": true
              },
              "addressCounty": {
                "type": "string",
                "nullable": true
              },
              "addressPostcode": {
                "type": "string",
                "nullable": true
              },
              "url": {
                "type": "string",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "openDate": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "statusName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "GiasEstablishmentId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "BaseAggregateRoot": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "domainEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IDomainEvent"
            }
          }
        }
      },
      "IDomainEvent": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "occurredOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Contact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAggregateRoot"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/ContactId"
              },
              "projectId": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProjectId"
                  }
                ]
              },
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "category": {
                "$ref": "#/components/schemas/ContactCategory"
              },
              "organisationName": {
                "type": "string",
                "nullable": true
              },
              "type": {
                "type": "string",
                "nullable": true
              },
              "localAuthorityId": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/LocalAuthorityId"
                  }
                ]
              },
              "establishmentUrn": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "project": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Project"
                  }
                ]
              }
            }
          }
        ]
      },
      "ContactCategory": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Other",
          "SchoolOrAcademy",
          "IncomingTrust",
          "LocalAuthority",
          "Diocese",
          "Solicitor",
          "OutgoingTrust"
        ],
        "enum": [
          "Other",
          "SchoolOrAcademy",
          "IncomingTrust",
          "LocalAuthority",
          "Diocese",
          "Solicitor",
          "OutgoingTrust"
        ]
      },
      "LocalAuthority": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAggregateRoot"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/LocalAuthorityId"
              },
              "name": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "address1": {
                "type": "string"
              },
              "address2": {
                "type": "string",
                "nullable": true
              },
              "address3": {
                "type": "string",
                "nullable": true
              },
              "addressTown": {
                "type": "string",
                "nullable": true
              },
              "addressCounty": {
                "type": "string",
                "nullable": true
              },
              "addressPostcode": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "SignificantDateHistory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SignificantDateHistoryId"
          },
          "revisedDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "previousDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "projectId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectId"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserId"
              }
            ]
          },
          "reason": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SignificantDateHistoryReason"
              }
            ]
          },
          "user": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        }
      },
      "SignificantDateHistoryId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SignificantDateHistoryReason": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SignificantDateHistoryReasonId"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "reasonType": {
            "type": "string",
            "nullable": true
          },
          "significantDateHistoryId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SignificantDateHistoryId"
              }
            ]
          }
        }
      },
      "SignificantDateHistoryReasonId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SignificantDateHistoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SignificantDateHistoryId"
              }
            ]
          },
          "revisedDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "previousDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "projectId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectId"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserId"
              }
            ]
          },
          "reason": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SignificantDateHistoryReasonDto"
              }
            ]
          },
          "user": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        }
      },
      "SignificantDateHistoryReasonDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SignificantDateHistoryReasonId"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "reasonType": {
            "type": "string",
            "nullable": true
          },
          "significantDateHistoryId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SignificantDateHistoryId"
              }
            ]
          }
        }
      },
      "ListAllProjectsResultModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "establishmentName": {
            "type": "string",
            "nullable": true
          },
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "urn": {
            "$ref": "#/components/schemas/Urn"
          },
          "conversionOrTransferDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/ProjectState"
          },
          "projectType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectType"
              }
            ]
          },
          "isFormAMAT": {
            "type": "boolean"
          },
          "assignedToFullName": {
            "type": "string",
            "nullable": true
          },
          "localAuthorityName": {
            "type": "string",
            "nullable": true
          },
          "team": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectTeam"
              }
            ]
          },
          "projectCompletionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "region": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Region"
              }
            ]
          },
          "localAuthorityNameFormatted": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "regionalDeliveryOfficerFullName": {
            "type": "string",
            "nullable": true
          },
          "newTrustName": {
            "type": "string",
            "nullable": true
          },
          "newTrustReferenceNumber": {
            "type": "string",
            "nullable": true
          },
          "advisoryBoardDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "AssignedToState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "AssignedOnly",
          "UnassignedOnly"
        ],
        "enum": [
          "AssignedOnly",
          "UnassignedOnly"
        ]
      },
      "OrderProjectByField": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "CompletedAt",
          "CreatedAt",
          "SignificantDate"
        ],
        "enum": [
          "CompletedAt",
          "CreatedAt",
          "SignificantDate"
        ]
      },
      "OrderByDirection": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Ascending",
          "Descending"
        ],
        "enum": [
          "Ascending",
          "Descending"
        ]
      },
      "ListMatResultModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "identifier": {
            "type": "string"
          },
          "trustName": {
            "type": "string"
          },
          "projectModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListAllProjectsResultModel"
            }
          }
        }
      },
      "ListAllProjectsByRegionsResultModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "region": {
            "$ref": "#/components/schemas/Region"
          },
          "conversionsCount": {
            "type": "integer",
            "format": "int32"
          },
          "transfersCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListAllProjectsForUserQueryResultModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "urn": {
            "$ref": "#/components/schemas/Urn"
          },
          "schoolOrAcademyName": {
            "type": "string"
          },
          "projectType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectType"
              }
            ]
          },
          "isFormAMat": {
            "type": "boolean"
          },
          "incomingTrustName": {
            "type": "string",
            "nullable": true
          },
          "outgoingTrustName": {
            "type": "string",
            "nullable": true
          },
          "localAuthority": {
            "type": "string"
          },
          "team": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectTeam"
              }
            ]
          },
          "conversionOrTransferDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "completionDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "assignedTo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ProjectUserFilter": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "AssignedTo",
          "CreatedBy"
        ],
        "enum": [
          "AssignedTo",
          "CreatedBy"
        ]
      },
      "ListAllProjectsQueryModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "establishment": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GiasEstablishment"
              }
            ]
          }
        }
      },
      "NoteDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/NoteId"
          },
          "body": {
            "type": "string"
          },
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "userId": {
            "$ref": "#/components/schemas/UserId"
          },
          "userFullName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "taskIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isNotable": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "NoteTaskIdentifier": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Handover",
          "LandQuestionnaire",
          "LandRegistry",
          "StakeholderKickoff",
          "SupplementalFundingAgreement"
        ],
        "enum": [
          "Handover",
          "LandQuestionnaire",
          "LandRegistry",
          "StakeholderKickoff",
          "SupplementalFundingAgreement"
        ]
      },
      "CreateNoteCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "userId": {
            "$ref": "#/components/schemas/UserId"
          },
          "body": {
            "type": "string"
          },
          "taskIdentifier": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NoteTaskIdentifier"
              }
            ]
          }
        }
      },
      "UpdateNoteCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "noteId": {
            "$ref": "#/components/schemas/NoteId"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "RemoveNoteCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "noteId": {
            "$ref": "#/components/schemas/NoteId"
          }
        }
      },
      "ListAllProjectsStatisticsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "overAllProjects": {
            "$ref": "#/components/schemas/ProjectStatisticsModel"
          },
          "regionalCaseworkServicesProjects": {
            "$ref": "#/components/schemas/ProjectStatisticsModel"
          },
          "notRegionalCaseworkServicesProjects": {
            "$ref": "#/components/schemas/ProjectStatisticsModel"
          },
          "conversionsPerRegion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionalProjectsStatisticsModel"
            }
          },
          "transfersPerRegion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionalProjectsStatisticsModel"
            }
          },
          "sixMonthViewOfAllProjectOpeners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllOpenersProjectsStatisticsModel"
            }
          },
          "newProjects": {
            "$ref": "#/components/schemas/ThisMonthNewProjectsStatisticsModel"
          },
          "usersPerTeam": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ProjectStatisticsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "conversions": {
            "$ref": "#/components/schemas/ProjectDetailsStatisticsModel"
          },
          "transfers": {
            "$ref": "#/components/schemas/ProjectDetailsStatisticsModel"
          }
        }
      },
      "ProjectDetailsStatisticsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "inProgressProjects": {
            "type": "integer",
            "format": "int32"
          },
          "completedProjects": {
            "type": "integer",
            "format": "int32"
          },
          "unassignedProjects": {
            "type": "integer",
            "format": "int32"
          },
          "totalProjects": {
            "type": "integer",
            "format": "int32"
          },
          "daoRevokedProjects": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "RegionalProjectsStatisticsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "regionName": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/ProjectDetailsStatisticsModel"
          }
        }
      },
      "AllOpenersProjectsStatisticsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string"
          },
          "conversions": {
            "type": "integer",
            "format": "int32"
          },
          "tranfers": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ThisMonthNewProjectsStatisticsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string"
          },
          "totalProjects": {
            "type": "integer",
            "format": "int32"
          },
          "totalConversions": {
            "type": "integer",
            "format": "int32"
          },
          "totalTransfers": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListAllProjectsConvertingQueryResultModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "establishmentName": {
            "type": "string",
            "nullable": true
          },
          "urn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "conversionDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "academyName": {
            "type": "string",
            "nullable": true
          },
          "academyUrn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "UpdateAcademyUrnCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "urn": {
            "$ref": "#/components/schemas/Urn"
          }
        }
      },
      "UpdateHandoverProjectCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "schoolSharepointLink": {
            "type": "string"
          },
          "incomingTrustSharepointLink": {
            "type": "string"
          },
          "outgoingTrustSharepointLink": {
            "type": "string",
            "nullable": true
          },
          "assignedToRegionalCaseworkerTeam": {
            "type": "boolean"
          },
          "handoverComments": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "$ref": "#/components/schemas/UserId"
          },
          "userTeam": {
            "$ref": "#/components/schemas/ProjectTeam"
          },
          "twoRequiresImprovement": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ProjectWithEstablishmentQueryModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "establishmentName": {
            "type": "string",
            "nullable": true
          },
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "urn": {
            "$ref": "#/components/schemas/Urn"
          },
          "conversionOrTransferDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "projectType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectType"
              }
            ]
          },
          "isFormAMAT": {
            "type": "boolean"
          },
          "regionalDeliveryOfficer": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "newTrustName": {
            "type": "string",
            "nullable": true
          },
          "newTrustReferenceNumber": {
            "type": "string",
            "nullable": true
          },
          "advisoryBoardDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "outgoingTrustName": {
            "type": "string",
            "nullable": true
          },
          "outgoingTrustUkprn": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Ukprn"
              }
            ]
          },
          "academyOrderType": {
            "$ref": "#/components/schemas/AcademyOrderType"
          },
          "incomingTrustName": {
            "type": "string",
            "nullable": true
          },
          "incomingTrustUkprn": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Ukprn"
              }
            ]
          }
        }
      },
      "AcademyOrderType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "AcademyOrder",
          "DirectiveAcademyOrder"
        ],
        "enum": [
          "AcademyOrder",
          "DirectiveAcademyOrder"
        ]
      },
      "CreateLocalAuthorityCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LocalAuthorityId"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "address3": {
            "type": "string",
            "nullable": true
          },
          "addressTown": {
            "type": "string",
            "nullable": true
          },
          "addressCounty": {
            "type": "string",
            "nullable": true
          },
          "addressPostcode": {
            "type": "string"
          },
          "contactId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContactId"
              }
            ]
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LocalAuthorityQueryModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LocalAuthorityId"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "LocalAuthorityDetailsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "localAuthority": {
            "$ref": "#/components/schemas/LocalAuthorityDto"
          },
          "contact": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsModel"
              }
            ]
          }
        }
      },
      "LocalAuthorityDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LocalAuthorityId"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "address3": {
            "type": "string",
            "nullable": true
          },
          "addressTown": {
            "type": "string",
            "nullable": true
          },
          "addressCounty": {
            "type": "string",
            "nullable": true
          },
          "addressPostcode": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContactDetailsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ContactId"
          },
          "title": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateLocalAuthorityCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LocalAuthorityId"
          },
          "code": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "address3": {
            "type": "string",
            "nullable": true
          },
          "addressTown": {
            "type": "string",
            "nullable": true
          },
          "addressCounty": {
            "type": "string",
            "nullable": true
          },
          "addressPostcode": {
            "type": "string"
          },
          "contactId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContactId"
              }
            ]
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeleteLocalAuthorityCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LocalAuthorityId"
          },
          "contactId": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContactId"
              }
            ]
          }
        }
      },
      "TransferTaskDataDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/TaskDataId"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "handoverReview": {
            "type": "boolean",
            "nullable": true
          },
          "handoverNotes": {
            "type": "boolean",
            "nullable": true
          },
          "handoverMeeting": {
            "type": "boolean",
            "nullable": true
          },
          "handoverNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "stakeholderKickOffIntroductoryEmails": {
            "type": "boolean",
            "nullable": true
          },
          "stakeholderKickOffSetupMeeting": {
            "type": "boolean",
            "nullable": true
          },
          "stakeholderKickOffMeeting": {
            "type": "boolean",
            "nullable": true
          },
          "masterFundingAgreementReceived": {
            "type": "boolean",
            "nullable": true
          },
          "masterFundingAgreementCleared": {
            "type": "boolean",
            "nullable": true
          },
          "masterFundingAgreementSigned": {
            "type": "boolean",
            "nullable": true
          },
          "masterFundingAgreementSaved": {
            "type": "boolean",
            "nullable": true
          },
          "masterFundingAgreementSignedSecretaryState": {
            "type": "boolean",
            "nullable": true
          },
          "masterFundingAgreementNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfNovationAndVariationReceived": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfNovationAndVariationCleared": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfNovationAndVariationSignedOutgoingTrust": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfNovationAndVariationSignedIncomingTrust": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfNovationAndVariationSaved": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfNovationAndVariationSignedSecretaryState": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfNovationAndVariationSaveAfterSign": {
            "type": "boolean",
            "nullable": true
          },
          "articlesOfAssociationReceived": {
            "type": "boolean",
            "nullable": true
          },
          "articlesOfAssociationCleared": {
            "type": "boolean",
            "nullable": true
          },
          "articlesOfAssociationSigned": {
            "type": "boolean",
            "nullable": true
          },
          "articlesOfAssociationSaved": {
            "type": "boolean",
            "nullable": true
          },
          "articlesOfAssociationNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "commercialTransferAgreementConfirmAgreed": {
            "type": "boolean",
            "nullable": true
          },
          "commercialTransferAgreementConfirmSigned": {
            "type": "boolean",
            "nullable": true
          },
          "commercialTransferAgreementSaveConfirmationEmails": {
            "type": "boolean",
            "nullable": true
          },
          "supplementalFundingAgreementReceived": {
            "type": "boolean",
            "nullable": true
          },
          "supplementalFundingAgreementCleared": {
            "type": "boolean",
            "nullable": true
          },
          "supplementalFundingAgreementSaved": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfVariationReceived": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfVariationCleared": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfVariationSigned": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfVariationSaved": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfVariationSent": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfVariationSignedSecretaryState": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfVariationNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "landConsentLetterDrafted": {
            "type": "boolean",
            "nullable": true
          },
          "landConsentLetterSigned": {
            "type": "boolean",
            "nullable": true
          },
          "landConsentLetterSent": {
            "type": "boolean",
            "nullable": true
          },
          "landConsentLetterSaved": {
            "type": "boolean",
            "nullable": true
          },
          "landConsentLetterNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "rpaPolicyConfirm": {
            "type": "boolean",
            "nullable": true
          },
          "formMReceivedFormM": {
            "type": "boolean",
            "nullable": true
          },
          "formMReceivedTitlePlans": {
            "type": "boolean",
            "nullable": true
          },
          "formMCleared": {
            "type": "boolean",
            "nullable": true
          },
          "formMSigned": {
            "type": "boolean",
            "nullable": true
          },
          "formMSaved": {
            "type": "boolean",
            "nullable": true
          },
          "churchSupplementalAgreementReceived": {
            "type": "boolean",
            "nullable": true
          },
          "churchSupplementalAgreementCleared": {
            "type": "boolean",
            "nullable": true
          },
          "churchSupplementalAgreementSignedIncomingTrust": {
            "type": "boolean",
            "nullable": true
          },
          "churchSupplementalAgreementSignedDiocese": {
            "type": "boolean",
            "nullable": true
          },
          "churchSupplementalAgreementSavedAfterSigningByTrustDiocese": {
            "type": "boolean",
            "nullable": true
          },
          "churchSupplementalAgreementSignedSecretaryState": {
            "type": "boolean",
            "nullable": true
          },
          "churchSupplementalAgreementSavedAfterSigningBySecretaryState": {
            "type": "boolean",
            "nullable": true
          },
          "churchSupplementalAgreementNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfTerminationForTheMasterFundingAgreementReceived": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfTerminationForTheMasterFundingAgreementCleared": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfTerminationForTheMasterFundingAgreementSigned": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfTerminationForTheMasterFundingAgreementSavedAcademyAndOutgoingTrustSharepoint": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfTerminationForTheMasterFundingAgreementContactFinancialReportingTeam": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfTerminationForTheMasterFundingAgreementSignedSecretaryState": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfTerminationForTheMasterFundingAgreementSavedInAcademySharepointFolder": {
            "type": "boolean",
            "nullable": true
          },
          "deedOfTerminationForTheMasterFundingAgreementNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "deedTerminationChurchAgreementReceived": {
            "type": "boolean",
            "nullable": true
          },
          "deedTerminationChurchAgreementCleared": {
            "type": "boolean",
            "nullable": true
          },
          "deedTerminationChurchAgreementSignedOutgoingTrust": {
            "type": "boolean",
            "nullable": true
          },
          "deedTerminationChurchAgreementSignedDiocese": {
            "type": "boolean",
            "nullable": true
          },
          "deedTerminationChurchAgreementSaved": {
            "type": "boolean",
            "nullable": true
          },
          "deedTerminationChurchAgreementSignedSecretaryState": {
            "type": "boolean",
            "nullable": true
          },
          "deedTerminationChurchAgreementSavedAfterSigningBySecretaryState": {
            "type": "boolean",
            "nullable": true
          },
          "deedTerminationChurchAgreementNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "closureOrTransferDeclarationNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "closureOrTransferDeclarationReceived": {
            "type": "boolean",
            "nullable": true
          },
          "closureOrTransferDeclarationCleared": {
            "type": "boolean",
            "nullable": true
          },
          "closureOrTransferDeclarationSaved": {
            "type": "boolean",
            "nullable": true
          },
          "closureOrTransferDeclarationSent": {
            "type": "boolean",
            "nullable": true
          },
          "confirmIncomingTrustHasCompletedAllActionsEmailed": {
            "type": "boolean",
            "nullable": true
          },
          "confirmIncomingTrustHasCompletedAllActionsSaved": {
            "type": "boolean",
            "nullable": true
          },
          "redactAndSendDocumentsSendToEsfa": {
            "type": "boolean",
            "nullable": true
          },
          "redactAndSendDocumentsRedact": {
            "type": "boolean",
            "nullable": true
          },
          "redactAndSendDocumentsSaved": {
            "type": "boolean",
            "nullable": true
          },
          "redactAndSendDocumentsSendToFundingTeam": {
            "type": "boolean",
            "nullable": true
          },
          "redactAndSendDocumentsSendToSolicitors": {
            "type": "boolean",
            "nullable": true
          },
          "requestNewUrnAndRecordNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "requestNewUrnAndRecordComplete": {
            "type": "boolean",
            "nullable": true
          },
          "requestNewUrnAndRecordReceive": {
            "type": "boolean",
            "nullable": true
          },
          "requestNewUrnAndRecordGive": {
            "type": "boolean",
            "nullable": true
          },
          "inadequateOfsted": {
            "type": "boolean",
            "nullable": true
          },
          "financialSafeguardingGovernanceIssues": {
            "type": "boolean",
            "nullable": true
          },
          "outgoingTrustToClose": {
            "type": "boolean",
            "nullable": true
          },
          "bankDetailsChangingYesNo": {
            "type": "boolean",
            "nullable": true
          },
          "checkAndConfirmFinancialInformationNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "checkAndConfirmFinancialInformationAcademySurplusDeficit": {
            "type": "string",
            "nullable": true
          },
          "checkAndConfirmFinancialInformationTrustSurplusDeficit": {
            "type": "string",
            "nullable": true
          },
          "confirmDateAcademyTransferredDateTransferred": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "sponsoredSupportGrantNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "sponsoredSupportGrantType": {
            "type": "string",
            "nullable": true
          },
          "declarationOfExpenditureCertificateDateReceived": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "declarationOfExpenditureCertificateCorrect": {
            "type": "boolean",
            "nullable": true
          },
          "declarationOfExpenditureCertificateSaved": {
            "type": "boolean",
            "nullable": true
          },
          "declarationOfExpenditureCertificateNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "conditionsMetCheckAnyInformationChanged": {
            "type": "boolean",
            "nullable": true
          },
          "conditionsMetBaselineSheetApproved": {
            "type": "boolean",
            "nullable": true
          },
          "formMNotApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "articlesOfAssociationSent": {
            "type": "boolean",
            "nullable": true
          },
          "commercialTransferAgreementQuestionsReceived": {
            "type": "boolean",
            "nullable": true
          },
          "commercialTransferAgreementQuestionsChecked": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "UpdateHandoverWithDeliveryOfficerCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "notApplicable": {
            "type": "boolean",
            "nullable": true
          },
          "handoverReview": {
            "type": "boolean",
            "nullable": true
          },
          "handoverNotes": {
            "type": "boolean",
            "nullable": true
          },
          "handoverMeetings": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "TaskDataModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "taskDataId": {
            "$ref": "#/components/schemas/TaskDataId"
          },
          "handoverReview": {
            "type": "boolean",
            "nullable": true
          },
          "handoverNotes": {
            "type": "boolean",
            "nullable": true
          },
          "handoverMeeting": {
            "type": "boolean",
            "nullable": true
          },
          "handoverNotApplicable": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ListTrustsWithProjectsResultModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "identifier": {
            "type": "string"
          },
          "trustName": {
            "type": "string"
          },
          "groupIdentifier": {
            "type": "string"
          },
          "conversionCount": {
            "type": "integer",
            "format": "int32"
          },
          "transfersCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserWithProjectsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UserId"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "team": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectTeam"
              }
            ]
          },
          "projectsAssigned": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListAllProjectsResultModel"
            }
          },
          "conversionProjectsAssigned": {
            "type": "integer",
            "format": "int32"
          },
          "transferProjectsAssigned": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OrderUserProjectsByField": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Id",
          "SignificantDate"
        ],
        "enum": [
          "Id",
          "SignificantDate"
        ]
      },
      "ListAllUsersWithProjectsResultModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UserId"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "team": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectTeam"
              }
            ]
          },
          "conversionProjectsAssigned": {
            "type": "integer",
            "format": "int32"
          },
          "transferProjectsAssigned": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}
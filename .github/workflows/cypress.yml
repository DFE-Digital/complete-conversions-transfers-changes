name: Run Cypress tests

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      CYPRESS_URL_ENDPOINT:
        required: true
      CYPRESS_API_ENDPOINT:
        required: true
      CYPRESS_USERNAME:
        required: true
      CYPRESS_AUTH_KEY:
        required: true
      CYPRESS_TENANT_ID:
        required: true
      CYPRESS_CLIENT_ID:
        required: true
      CYPRESS_CLIENT_SECRET:
        required: true
      CYPRESS_COMPLETEAPI_CLIENTID:
        required: true
      TEAMS_WEBHOOK_URL:
        required: true

  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        type: environment

concurrency:
  group: ${{ github.workflow }}

# Define reusable values as top-level variables
env:
  NODE_VERSION: '18'
  BROWSER: 'edge'
  WORKING_DIRECTORY: 'src/Tests/Dfe.Complete.CypressTests'

jobs:
  # Run Cypress tests in parallel across different test groups
  cypress-tests:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    strategy:
      fail-fast: false
      matrix:
        include:
#          - group: conversion-tasks
#            spec: cypress/e2e/conversion-tasks/**/*.cy.ts
          - group: conversions
            spec: cypress/e2e/conversions/revoke-a-directive-academy-order.cy.ts
#          - group: project-listings
#            spec: cypress/e2e/project-listings/**/*.cy.ts
#          - group: transfer-tasks
#            spec: cypress/e2e/transfer-tasks/**/*.cy.ts
#          - group: transfers
#            spec: cypress/e2e/transfers/**/*.cy.ts
#          - group: user-capabilities-regional-workers
#            spec: cypress/e2e/user-capabilities-regional-workers/**/*.cy.ts
#          - group: user-capabilities-support
#            spec: cypress/e2e/user-capabilities-support/**/*.cy.ts
    container:
      image: cypress/browsers:22.15.1@sha256:753c6dd8dc176c2eb9e9a622146d2c260e308e86eb62ce2b3e6f12e7d67d7b13
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          ref: ${{ github.ref }}

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_url: ${{ secrets.CYPRESS_URL_ENDPOINT }}
          CYPRESS_api: ${{ secrets.CYPRESS_API_ENDPOINT }}
          CYPRESS_username: ${{ secrets.CYPRESS_USERNAME }}
          CYPRESS_authKey: ${{ secrets.CYPRESS_AUTH_KEY }}
          CYPRESS_tenantId: ${{ secrets.CYPRESS_TENANT_ID }}
          CYPRESS_clientId: ${{ secrets.CYPRESS_CLIENT_ID }}
          CYPRESS_clientSecret: ${{ secrets.CYPRESS_CLIENT_SECRET }}
          CYPRESS_completeApiClientId: ${{ secrets.CYPRESS_COMPLETEAPI_CLIENTID }}
        with:
          browser: ${{ env.BROWSER }}
          spec: ${{ matrix.spec }}
          working-directory: ./${{ env.WORKING_DIRECTORY }}

      - name: Upload screenshots on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: screenshots-${{ inputs.environment }}-${{ matrix.group }}
          path: ${{ env.WORKING_DIRECTORY }}/cypress/screenshots
          retention-days: 5

      - name: Prepare test results
        id: prepare-results
        if: always()
        run: |
          mkdir -p cypress/reports/merged
          # Check if test results exist and process them
          if [ -d "cypress/reports/mocha" ] && [ "$(find cypress/reports/mocha -name '*.json' 2>/dev/null | wc -l)" -gt 0 ]; then
            for file in cypress/reports/mocha/*.json; do
              filename=$(basename "$file")
              cp "$file" "cypress/reports/merged/${{ matrix.group }}-$filename"
            done
            echo "Processed test results for ${{ matrix.group }}"
          else
            echo "No test results found for ${{ matrix.group }}, creating placeholder"
            echo '{"stats":{"suites":0,"tests":0,"passes":0,"pending":0,"failures":0,"start":"","end":"","duration":0}}' > "cypress/reports/merged/${{ matrix.group }}-placeholder.json"
          fi

      - name: Upload test results
        if: always() && steps.prepare-results.outcome == 'success'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: raw-test-reports-${{ matrix.group }}
          path: ${{ env.WORKING_DIRECTORY }}/cypress/reports/merged/*.json
          retention-days: 1 # Short retention for raw reports

  # Generate a combined report from all test runs
  generate-combined-report:
    name: Generate Combined Report
    needs: cypress-tests
    runs-on: ubuntu-latest
    if: always()
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.WORKING_DIRECTORY }}/package-lock.json'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: raw-test-reports-*
          path: ${{ env.WORKING_DIRECTORY }}/cypress/reports/mocha
          merge-multiple: true

      - name: Generate combined HTML report
        run: |
          mkdir -p mochareports
          npm run generate:html:report

      - name: Upload combined report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: combined-report-${{ inputs.environment }}
          path: ${{ env.WORKING_DIRECTORY }}/mochareports
          retention-days: 30 # Longer retention for final report

      - name: Report results to Teams
        if: always()
        run: |
          node scripts/send-teams-notification.js
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
          ENVIRONMENT: ${{ inputs.environment }}
          INFORMATION_LINK: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

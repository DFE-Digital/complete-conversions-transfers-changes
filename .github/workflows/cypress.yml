name: Run Cypress tests

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      CYPRESS_URL_ENDPOINT:
        required: true
      CYPRESS_API_ENDPOINT:
        required: true
      CYPRESS_USERNAME:
        required: true
      CYPRESS_AUTH_KEY:
        required: true
      CYPRESS_TENANT_ID:
        required: true
      CYPRESS_CLIENT_ID:
        required: true
      CYPRESS_CLIENT_SECRET:
        required: true
      CYPRESS_COMPLETEAPI_CLIENTID:
        required: true
      CYPRESS_USER_AD_ID:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        type: environment

concurrency:
  group: ${{ github.workflow }}

jobs:
  generate-token:
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ steps.get-token.outputs.access_token }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get Access Token
        id: get-token
        run: |
          response=$(curl -X POST -d "grant_type=client_credentials&client_id=${{ secrets.CYPRESS_CLIENT_ID }}&client_secret=${{ secrets.CYPRESS_CLIENT_SECRET }}&scope=api://${{ secrets.CYPRESS_COMPLETEAPI_CLIENTID }}/.default" https://login.microsoftonline.com/${{ secrets.CYPRESS_TENANT_ID }}/oauth2/v2.0/token)
          status=$(echo $response | jq -r .status)
          if [ "$status" -ne 200 ]; then
            error_message=$(echo $response | jq -r .error_description)
            echo "Failed to get access token. Status: $status, Error: $error_message"
            exit 1
          fi
          access_token=$(echo $response | jq -r .access_token)
          echo "::set-output name=access_token::$access_token"
          echo $access_token > access_token.txt

      - name: Upload Access Token Artifact
        uses: actions/upload-artifact@v4
        with:
          name: access-token
          path: access_token.txt

  cypress-tests:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    strategy:
      matrix:
        browser: [
          "edge"
        ]
    container:
      image: cypress/browsers:22.12.0
    defaults:
      run:
        working-directory: src/Tests/Dfe.Complete.CypressTests
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Run
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_url: ${{ secrets.CYPRESS_URL_ENDPOINT }}
          CYPRESS_api: ${{ secrets.CYPRESS_API_ENDPOINT }}
          CYPRESS_username: ${{ secrets.CYPRESS_USERNAME }}
          CYPRESS_authKey: ${{ secrets.CYPRESS_AUTH_KEY }}
          CYPRESS_tenantId: ${{ secrets.CYPRESS_TENANT_ID }}
          CYPRESS_clientId: ${{ secrets.CYPRESS_CLIENT_ID }}
          CYPRESS_clientSecret: ${{ secrets.CYPRESS_CLIENT_SECRET }}
          CYPRESS_completeApiClientId: ${{ secrets.CYPRESS_COMPLETEAPI_CLIENTID }}
          CYPRESS_userAdId: ${{ secrets.CYPRESS_USER_AD_ID }}
          CYPRESS_accessToken: ${{ needs.generate-token.outputs.access_token }}
        with:
          browser: ${{ matrix.browser }}
          working-directory: ./src/Tests/Dfe.Complete.CypressTests

      - name: Upload screenshots
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ inputs.environment }}-${{ matrix.browser }}
          path: src/Tests/Dfe.Complete.CypressTests/cypress/screenshots

      - name: Generate report
        if: always()
        run: |
          mkdir mochareports
          npm run generate:html:report

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ inputs.environment }}-${{ matrix.browser }}
          path: src/Tests/Dfe.Complete.CypressTests/mochareports

      - name: Report results
        if: always()
        run: npm run cy:notify -- --custom-text="Environment ${{ inputs.environment }}, See more information https://github.com/DFE-Digital/complete-conversions-transfers-changes/actions/runs/${{ github.run_id }}"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
